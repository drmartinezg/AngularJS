Neosavvy - Angular_Jasmine
* Setup
** Directorio vacio ns-jasimine-testing
** Crear directorios app y test
** Creat proyecto con npm
	$ npm init
	Opciones por defecto
	Crea package.json
	Crea node_modules donde se instalan los modulos propios del proyecto
** Instalar karma local o global (recomendado)
	$ npm install karma --save-dev  -> local
	$ npm install -g karma -> global
** Instalar Jasmine
	$ npm install karma-jasmine --save-dev
	$ npm install karma-chrome-launcher --save-dev
** Configurar karma   
	$ karma init
	Testing framework > jasmine
	Require.js > no
	Browser > Chrome
	Sources > app/**/*.js
	Test > test/**/*.js
	Karma watch all files > yes
** Crear test en carpeta test: test.js
	describe("true", function() {
		it("Should be true", function() {
			expect(true).toBeTruthy();
		});
	});
** Ejecutar test
	$ karma start karma.conf.js

* Bower
** Instalar Gestor de Dependencias bower
	$ npm install bower -g
** Añadir dependencias al proyecto
	$ bower install angular
	$ bower install angular-mocks
	$ bower install angular-resource
** Buscar dependencias con bower
	$ bower search angular
** Añadir dependencias a karma. En karma.conf.js
	files: [
		'bower_components/angular/angular.js',
		'bower_components/angular-mocks/angular-mocks.js',
		'bower_components/angular-resource/angular-resource.js',
		'app/**/*.js',
		'test/**/*.js'
	],

* Controller Testing
** app/controller/pie-controller.js
	angular.module('pie', []).controller('PieController', 
		['$scope',
			function($scope) {

				$scope.eatSlice = function() {
					if ($scope.slices) {
						$scope.slices--;
					}
				};

				$scope.slices = 8;
		}]);      

** test/controller/pie-controller-spec.js
	describe('PieController', function() {
		var $rootScope,
		    $scope,
		    controller;

		beforeEach(function() {
		    	module('pie');

		    	inject(function($injector) {
		    		$rootScope = $injector.get('$rootScope');
		    		$scope = $rootScope.$new();
		    		controller = $injector.get('$controller')('PieController', {$scope: $scope});
		    	});
		    });

		describe('Action Handlers', function() {
			
			describe('eatSlice', function() {
				it('Should decrement the number of slices', function() {
					expect($scope.slices).toEqual(8);
					$scope.eatSlice();
					expect($scope.slices).toEqual(7);
				});

				it('Should do nothing when slices is 0', function() {
					$scope.slices = 0;
					$scope.eatSlice();
					expect($scope.slices).toEqual(0);
				});
			});
			
		});

	    describe('Initialization', function() {
	    	it('Should instantiate slices to 8', function() {
	    		expect($scope.slices).toEqual(8);
	    	});
	    });    

	});

* Controller Testing ('this' methods)
** app/controller/pie-controller.js
	angular.module('pie', []).controller('PieController', 
		['$scope',
			...
				this.requestFlavor = function(flavor) {
					$scope.lastRequestedFlavor = flavor;
				};

				$scope.lastRequestedFlavor;
				$scope.slices = 8;
		}]);

** test/controller/pie-controller-spec.js
	describe('PieController', function() {
	...
	    describe('Initialization', function() {
	    ...
	    	it('Should instantiate $scope.lastRequestedFlavor', function() {
	    		expect($scope.lastRequestedFlavor).toBeUndefined();
	    	});
	    });    
	});

** test/controller/pie-controller-spec.js
	describe('PieController', function() {
	...
		describe('requestFlavor', function() {
			
			it('Should set $scope.lastRequestedFlavor to the passed in argument', function() {
				controller.requestFlavor("Cherry");
				expect($scope.lastRequestedFlavor).toEqual("Cherry");
			});
		});
	...
	});
